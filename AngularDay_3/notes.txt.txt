Angluar=


While creating project their are two option 
   1. standalone true
   2. standalone false

   if we choose standalone true we do not have to import component directly  import in that file
   if we choose standalone false we have to import component directly in app.module.ts file



   command 
   ng 

    project create for create project 
    --ng new <projectname>  : to create new project

    select css
    
    after successfully create project select the project == cd <projectname>
    eg.
        --ng new angularproject1
        --cd angularproject1
    and run project
        ----ng serve

***************************************************************
**  Angular Project Structure  **

***************************************************************

Components
    Components are the most basic building block of an UI in an Angular application.
    An Angular application ia a tree of Angluar Components.
    Every angular Components is written as a class.
    Every Angular application has one start-up component-root component named AppComponent.
    AppComonent's code is available app.components.ts file.

    The @Component{{}} decorator is applied to the component class
    To apply this decorator the component interface is imported from the core lib of angular
    The import {Component} from '@angular/core


    *************************************************
 Every component has typically four files associated with it.
    1. app.component.ts  file
    2. app.component.html file
    3. app.component.css file
    4. app.component.spec.ts file

 app is component name we change the name then file name will be
    eg. if we change the name to mycomponent then file name will be
    1.mycomponent.component.ts,
    2.mycomponent.component.html,
    3.mycomponent.component.css,
    4.mycomponent.component.spec.ts    

    *************************************************

    create new Component
    command is 
     ng generate component FirstComponent  or
     ng g c FirstComponent


*************************************************
03/12/2024
............PIPES.....................
   Angualr pipes are a parts of component UI templates.
   they simpilfy data tranformation and data formatting within markup template of UI.
   they are used to format the data before it is displayed to the UI
   pipes are a way to format, filter and manipulate data without modifying the underlying data source
   they accept an input an input value, process and return a tranformed value as the output.

   generate new pipe/ above to component

   ng g p <name>

   · Steps to create a custom pipe:
    · Use AngularCLI command to scaffold custom pipe class
    · ng g pipe <nameofthepipe>
    · This creates a TypeScript Class with an export keyword.
    · Decorated with the @pipe decorator and has the name property that defiṋes the name of the pipe.
    · It implements the PipeTransform interface.
    · Implement the transform method of the interface. This method code is actually responsible for data transformation
    · Return the transformed data with the pipe.
    · Use the above pipe in the template markup

What is $event?
   DOM Event carries the event parload .i.e the information about the event 
   This event payload can be accessed by using $event as an argument to the handler funtion.

