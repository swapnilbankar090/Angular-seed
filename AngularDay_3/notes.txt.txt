Angluar=


While creating project their are two option 
   1. standalone true
   2. standalone false

   if we choose standalone true we do not have to import component directly  import in that file
   if we choose standalone false we have to import component directly in app.module.ts file



   command 
   ng 

    project create for create project 
    --ng new <projectname>  : to create new project

    select css
    
    after successfully create project select the project == cd <projectname>
    eg.
        --ng new angularproject1
        --cd angularproject1
    and run project
        ----ng serve

***************************************************************
**  Angular Project Structure  **

***************************************************************

Components
    Components are the most basic building block of an UI in an Angular application.
    An Angular application ia a tree of Angluar Components.
    Every angular Components is written as a class.
    Every Angular application has one start-up component-root component named AppComponent.
    AppComonent's code is available app.components.ts file.

    The @Component{{}} decorator is applied to the component class
    To apply this decorator the component interface is imported from the core lib of angular
    The import {Component} from '@angular/core


    *************************************************
 Every component has typically four files associated with it.
    1. app.component.ts  file
    2. app.component.html file
    3. app.component.css file
    4. app.component.spec.ts file

 app is component name we change the name then file name will be
    eg. if we change the name to mycomponent then file name will be
    1.mycomponent.component.ts,
    2.mycomponent.component.html,
    3.mycomponent.component.css,
    4.mycomponent.component.spec.ts    

    *************************************************

    create new Component
    command is 
     ng generate component FirstComponent  or
     ng g c FirstComponent


*************************************************
03/12/2024
............PIPES.....................
   Angualr pipes are a parts of component UI templates.
   they simpilfy data tranformation and data formatting within markup template of UI.
   they are used to format the data before it is displayed to the UI
   pipes are a way to format, filter and manipulate data without modifying the underlying data source
   they accept an input an input value, process and return a tranformed value as the output.

   generate new pipe/ above to component

   ng g p <name>

   · Steps to create a custom pipe:
    · Use AngularCLI command to scaffold custom pipe class
    · ng g pipe <nameofthepipe>
    · This creates a TypeScript Class with an export keyword.
    · Decorated with the @pipe decorator and has the name property that defiṋes the name of the pipe.
    · It implements the PipeTransform interface.
    · Implement the transform method of the interface. This method code is actually responsible for data transformation
    · Return the transformed data with the pipe.
    · Use the above pipe in the template markup

What is $event?
   DOM Event carries the event parload .i.e the information about the event 
   This event payload can be accessed by using $event as an argument to the handler funtion.

*****************************************************
4/12/24

for communication between 2 component we use @Input and @Output   
   @Input is used to get data from parent to child component
   @Output is used to get data from child to parent component
   in ts file variable shown in html file

Custom directives
   Custom directives are a way to extend the functionality of HTML elements in Angular.
   command:- ng g d customdirective

Handling custom Events in angular
   the custom events in angular can be handled by using 
      1 @Output decorator - Component communication
      2 @EventEmitter class - for definig custom event
      3 Two component
         a.Parent Component-Data receiver.
         b.Child Component-Data sender.
         c.Here the data is shared by child component to parent component.
      4 To create a component that handles custom event import
         import{Component,EventEmitter, Output} from '@angular/core'
      5 @Output decorator is used to pass the data from child to parent component.
      6 @Output decorator binds a property of a child component, to send data the data to the parent component.
      7 @Output binds a property of the type of angular EventEmitter class.
      8 @EventEmitter class is used to emit the data from child to parent component.

Handling forms in Angluar
   1.Template driven forms --- html page handle data
   2. Model driven  from
   
     1 Template driven forms
       Create a form in html page
       A template-driven form is the simplest way to bulid a form in Angular
       As the name suggest all of the form detalis are specifies in component markup file.
       The entire form get managed in the view template.
       It uses buil-inform Handling directives that are placed in HTML markq of the form 
         1. ngForm
         2. ngModel and
         3. ngModelGroup

      2 Reactive form/ Model Driven forms
      Reactive forms(also known as Model-driven forms) are one of the two ways to build Angular forms.4
      Reactive forms are forms where we define the Structure of the form in the component class 
         i.e. we create the form model Form Groups and Form Controls
      In this apporach, the representation of the form is created in the component class.
      the FOrm field are creates as properties of the component class.
      this form model is then bound to the HMTL elements.

   difference
   Normal HTML form in a singlel HTML form read one one attraibute get read

   and angulat form whole data was in read in one time or in one object.         
   
  ***********************************************************************************************
  5/dec/2024
               
   Rotuing in Angluar
      Routing in Angular is a way to navigate between different views or components in an Angular application
      Routing is used to navigate between different views or components in an Angular application.
      Routing is used for navigation based on the request URL.
      it change the state of the application by loading differnt components based on the request URL
      navigation is achieved by configuring routes in route configuration file // app.routing.ts
      to work with routing features,import built-in router module named 'ROUTERMODULE' form @angular/router

      Routing in Angualr- Configure navigation Links
         roterLink is a directives that is used in acchor<a> tag to Configure navigation link.
         <router-Outer> - a built-in tag from Angluar RotuerModule asts as placeholder for a component that gets rendered when a navigation link is hit.
         
               